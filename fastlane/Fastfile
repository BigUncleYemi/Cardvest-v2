# -------------iOS Sign, Build & Deploy-------------#
platform :ios do
  desc 'Set up certificates and provisioning profiles.'
  lane :certificates do
    app_store_connect_api_key(
      key_id: "3D4ADG3459",
      issuer_id: "9fac4228-d77f-4ac1-9fcc-0c0ef467bcdf",
      key_filepath: "fastlane/AuthKey_3D4ADG3459.p8",
      in_house: false
    )
    match(
      type: "adhoc",
      git_url: "git@github.com:FLIP-Digital-Technologies/ios-certificates.git",
      readonly: true,
      keychain_password: ENV["MATCH_KEYCHAIN_PASSWORD"]  # Password for the Keychain
    )
  end

  desc 'Build the staging release iOS application.'
  private_lane :build_staging do
    package = load_json(json_path: "./package.json")
    xcversion(
      version: "15.0"
    )
    gym(
      scheme: "Cardvest",
      workspace: './ios/' + package['name'] + '.xcworkspace',
      export_method: 'ad-hoc'
    )
  end

  desc 'Build the production release iOS application.'
  private_lane :build_production do
    package = load_json(json_path: "./package.json")
    xcversion(
      version: "15.0"
    )
    gym(
      scheme: "Cardvest",
      workspace: './ios/' + package['name'] + '.xcworkspace',
      export_method: 'ad-hoc'
    )
  end

  desc 'Upload the release IPA to TestFlight.'
  private_lane :upload_testflight do
    pilot(
      username: ENV['APP_STORE_CONNECT_EMAIL'], # Apple ID email
      app_identifier: 'com.flipdigitals.cardvest',
      skip_submission: true, # Set to false if you want to auto-submit for review
      skip_waiting_for_build_processing: false
    )
  end

  desc 'Sign, build, deploy to TestFlight (staging).'
  lane :deploy_testflight_staging do
    certificates
    build_staging
    upload_testflight
  end

  desc 'Sign, build, deploy to TestFlight (production).'
  lane :deploy_testflight_production do
    certificates
    build_production
    upload_testflight
  end

  desc 'Bump, badge, sign, build, deploy to TestFlight (staging).'
  lane :bump_badge_deploy_testflight_staging do
    bump_badge
    deploy_testflight_staging
  end

  desc 'Bump, badge, sign, build, deploy to TestFlight (production).'
  lane :bump_badge_deploy_testflight_production do
    bump_badge
    deploy_testflight_production
  end
end

# -------------Icons & Versioning-------------#
desc 'Android: Increment versionCode and set versionName to package.json version.'
package = load_json(json_path: "./package.json")
private_lane :inc_ver_and do
  increment_version_code(
    gradle_file_path: "./android/app/build.gradle",
  )
  increment_version_name(
    gradle_file_path: "./android/app/build.gradle",
    version_name: package['version']
  )
end

desc 'iOS: Increment build number and set the version to package.json version.'
private_lane :inc_ver_ios do
  increment_build_number(
    xcodeproj: './ios/' + package['name'] + '.xcodeproj'
  )
  increment_version_number(
    xcodeproj: './ios/' + package['name'] + '.xcodeproj',
    version_number: package['version']
  )
end

desc 'Bump build numbers, and set the display version to match package.json version.'
private_lane :bump do
  inc_ver_ios
  inc_ver_and
end

desc 'Bump and badge iOS and Android.'
lane :bump_badge do
  bump
end
